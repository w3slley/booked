09/02/2019 
Features implemented:
	1)Made the transition to PDO in the backend. This is something I planned to do a long time ago but never had the time and patience to do it.

I still have to fix the front end because I messed around with the month tag in the nav bar and still have to fix that. What I did today was transition everything I had coded to PDO. There's a lot of things to do though. The web app is the same but with the new backend.


11/02/2019
Feature implemented:
	1) Used the goodreads api to improve the python script which downloads bookcovers. Now users can download even bookcovers from portuguese books. There're some issues I have to work on though.

24/02/2019
Features implemented:
	1) Fixed the display of the months to select at the initial page.
	2) Made sure that the book title will be deleted from database and the bookcover from the images folder when there's no other user who has the book added to their list. This will save storage space.
	3) Messed around with the python script. First I tried to get the book id via the API, but I don't know if this is going to work. Then, I tried to get all the links of the bookcovers and display them in the webpage. The user could choose the right one. I don't know if that's going to work out either.

30/05/2019
I'm back - again - to implement some new features in the booked web app:
	1) Changed again the python script to use googletrans and make search using google.
Now it's runing as it use to (some error had occur with googletrans but now it's working fine). I have to implement some javascript features in the future.

24/06/2019
1)Today I started to change the way the url looks like. There were a lot of blank atributes in the url and I changed that. Now only the year will appear when the user wants to see all the books read in that year. Likewise, only the year and the month will be displayed in the url when the user wants to see the books read in that month of the year.
2)fixed date format in the books component.
3)Fixed the url of the searches (before the submit= appeared and now it doesn't).
4) Fixed problem with select tag in the editing section. Now the month the user read the book will appear in the select tag.
5) Fixed a problem I had with the years displayed. The problem was that they didn't have space between them and they were treated as one single word. I just inserted a space and it became the way I wanted.
6) Made sure that when any reading event is excluded, if the author or book aren't being use in any other, they are excluded from the database. This will save space and storage in the DB. I only need to implement this for the years. Tomorrow I'll try to do it.


25/06/2019
1)Implemented item 6) for the years.
2)Fixed problem I was having while deleting reading events.
3)Fixed font-family in the navbar select.
4)Fixed position of text inside the box div. Now they are floated insted of being manually assign a position (like it was before).
5)Fixed problem reguarding the animation in and out of the buttons in the box of the reading event.
6)Created a section in the dashboard that displays the last book added in the system. I also added the total number of books added in the databases.
7)Changed the way the books are displayed. Before they were shown from december on the top to january on the bottom. Now it's the oposite.
8)Implemented feature that displays the number of books read in the current month.

28/06/2019
1)Create a partial classification system. I need to implement the backend so that the user can add a grade to the book while adding it to the system.

30/06/2019
1)Users can now update the value of the classification in the edit section.
2)Inserted all the functions in the edit.php file in the bookEvent.php file. They are now all inside the class and are responsible for updating the information on the books and book reading event.
3)Created a modal to add new books. The input tags are all in there. I still have to create a modal to edit the books using ajax.
4)Created a modal where users can edit it the books. Right now it doen't work async, but it will soon.

01/07/2019
1)Created the front-end of the index page. There's a lot of things to do yet, but it's kind of nice. I used the typed.js library in the main page. It looks really good. I still have to create the front end for mobile.
2)Created the front-end for the login page.
3)Started to arrange things in the dashboar for a brand new user.

03/07/2019
1)Implemented a rudimentary way of editing the books using AJAX. However I realized that if a user edits the book name or author or category, it will change for every other user in the site! Therefore, I need to make things unique: every author and category and books for each user.

09/07/2019
1)Changed the entire database schema when adding books. The table continues to be called add_book, but the book_title and author_name are unique for every book read. There's not a table for authors and books anymore. Also the classification is unique for each book added.Therefore, the user can edit the book's name, the author's name and the classification for now. I still need to figure out a way to let users edit the year they read the book. By doing that, another row will be created in the DB and the id will go to the add_book table. I still need to scketch the details of this new system. But at least the users can now edit the book's information without reloading the page.

10/07/2019
1)Fixed some issues with the async editing of the books. I changed the design of the classification from a circle to a square. It's not the way I want and I'll probably change again later. I also fixed the problems with the change I made before regarding the author's and book's table. These were just code I forgot to delete in the BookEvent.php file.

31/07/2019

1)implemented error handler in the add book form.
2)added close button on edit modal.
3) I will try to implement a new feature: add a hash_id column in the add_book table. It will allow me to use it in the delete_book function without users knowing the id of books (DONE) and it will allow me to display a single note (with the hash_id in the uri). (DONE PARTIALLY)
4)Added hash_id column in the add_book table. Now each book has a unique hash id which makes way harder for anyone to guess what the id of the book really is (both in the edit and delete functions - both are displayed in the front end and could be used as a attack vector).

01/08/2019

1)Fixed ugly code in the initial_page file (it was the one that displayed the months sidebar - now is in the class file and not in the main page).
2)Added a text area in the edit section for future implementation of the comment system.

02/08/2019

1)Fixed error handler problem with the year and month in the url. Before the user could insert anything there and it wouldn't display nothing. Now there's a error message and a link to the dashboard.

05/08/2019

I messed around with the commits and ended up going back to a previous version not knowing how to come back. I have to start learning these things. At least I pushed the changes I made recently.

1)Fixed close span in the dashbord.php file.
2)Removed all variables linked to the BookEvent class and only initiated one: $data = new BookEvent(). It will be used to call all methods in the class.
3)Fixed add book interaction in the dashboard.php file. Not the user can add a book as intended.

06/08/2019
1)Fixed session problems I was having in the index page and also in the dashboard page (I forgot to add the session_start() in the beginning of the page).
2) Added layout folder to better organize the file structure.
3) Started to implement the layout of the profile page.

22/08/2019
1)Changed how book covers are stored and displayed. The website no longer downloads any bookcovers. The python script from now on only gets the url from the goodreads servers and hands over to php so that it can save it into the database. Then the image is rendered from there. However there are some things I need to fix still: for instance the image styling in the edit section changed and I have to handle that. I also understand that changing some major feature of the website like that is something very important and should be documented and each line of code changed highlighted, otherwise it would be very damaging for the company to realize one change like this made other part of the app unusable and broke everything up. So I will try to write some documentation in the future about each function in the Book Event file and also how the entire app works in the future (when I get time haha). For now I only need to fix the css problem. When I do so, I'll get back here.
2)Fixed css problem I was having with bookcover in the edit section.


30/08/2019
1)Fixed problem with sticky position. Now when the user gets to the bottom of the page the month and search div will stop right before the footer tag.I also used flexbox in main page (to separate the books from the sidebar).

03/09/2019
1)Created a new branch for fixing problems with OOP php. I'm going to change things here and then merge into the master branch. That's how you are supposed to fix bugs and add features.


######################################################################
I'm back at the development of the web app. I need to implement some features:
1)Use PDO in the interaction with the mysql database (DONE).
2)Display categories and months when adding a new book to DB. Give the users the option to choose a category from the db or to add a new one. The same thing could work with the years. (DONE with months)
3)Do it also in the edit section (DONE with months)
4)Implement AJAX calls on the entire website.(DONE on going)
5)Create the front end of the index and login page. (DONE)
6)Create the front end of the profile page.
7)Make sure when the user delete one book and it's the only one read in that particular year, then the user has to be redirected to another page - and not the page of the excluded year (DONE).
8)Add a last added book in the dashboard. (DONE)
9)Add a counter of how many books the user read in total. (DONE)
10)Add a loading animation when the user downloads the bookcover in the edit section.
11)When solving the mechanisms of the delete function, I acidentally programed the logic to go to the last year the user has regardless of what book the user deleted... I have to fix this ASAP. (DONE)
12) Solve problem with delete funcionality (DONE)
13) Create section where users can add comments and classification on the books.
14) Need to make the classification unique for each user. Right now it's enbeded in the books table. I have to add another column in the add_book table with the name 'classification' or 'grade'.
15) Add error handlers in the grade part of the modal. I need to make sure that the user can only insert a number from 0 to 100. (DONE)
16) I need to fix the problem with the years in the edit section. When you alter the year on it, it doesn't happen. I need to make sure that when a new year is inserted there, it needs the be created in the DB (if it doesn't exist yet) and redirected to there.(Instead, I just don't allow users to edit the year anymore. If the want to, they will have to add the book again. I will ponder about this later)
17)Finish the editing section using AJAX.(DONE partially)
18)Create a design for the editing section.(DONE partially)
19)Don't forget to fix the security problem in the edit section. Right now, I can edit anyone's books if I know the add_book_id. I need to make sure that only the user that added the book can access it. (DONE)
20)Create a new layout for the dashboard.(IN PROGRESS)
21)I need to add error handlers in the sign up process.
22) There are major things I need to implement. First, I have to change the way the reading events are stored in the database. There won't be more books and authors tables. They will be added directely into the reading event. I'll need to do this with the year and category as well. It's going to be a pain in the ass but I need to do it. I won't probabily need to do this with the months and years tables though. If the user made a mistake and inserted a wrong year, they just need to add the book again. (DONE)
23) Add error handlers in the modal for adding a new book.(DONE)
24) Implement the feature where only the books in that month are displayed when the user changes its information.
25) Move some code that right now is in the initial_page.php file to the class BookEvent. That way you only need to instanciate the class from the initial_page.php file and all the mess goes into the class. It can also be useful when the user edit information on the books because I can just update the html in the class using AJAX.(DONE)
26)There is still a security vunerability: if the user insert the id of other book, it will delete it even though they have no authority to do so. One alternative is to add a new parameter to the delete_book function: the id. Then, when the user can only delete a note added by him/her. I need to fix this right away. (Fixed this by adding hash_id as an identifier. Now each note has a unique hash id - more complicated then just one number to guess. Even then I still have to implement a security check in the server to see if the user that is trying to delete the note is actually the same user who created it).
27)Need to implement a way of adding the same book twice in the database (right not it doesn't display the bookcover)! Just a comment: if you press Ctrl + . you can add emoticons... 🤣️
28) I need to add a username column back into the database...(DONE)
29)Edit functionality is not working when searching. I have to fix that.
30)Make sure that when the user updates the book info the month sidebar is updated as well.
31)When the user updates the book info in the month section all the books read in the read are displayed. I have to fix that.
32) I need to add error handlers when the user edits the classification of a book. Right now they can insert anything and will be added to the database. I have to allow only numbers between 0 and 100.
33) I need to implement the showuniquebook function so that when the user adds the book (or other trigger) the user will be redirected to the page of the book withs its information. Right now it's not being used.
34)When you add a classification of, say, '95d' with a 'd' at the end, the grade 95 is added to the database nonetheless. I have to figure out some way to prevent that and only let users insert numbers.
35)Right now (07/08/2019) there is a xss vunerability in the search section of the website. I will leave it alone for now and ponder how I could gain access to other users information only with this vunerability. It happened because I allowed the search term to be inserted in the p tag which says "Results for '':" and in doing so, if you search for <script>alert('test')</script> it will run the javascript code. I will think about how to solve this.
36)I've been thinking about a new approach to the website. Instead of downloading the bookcovers, I could simply stored the url in the database and that's it. The site wouldn't be scalable the way it is now.(DONE)
37) I just realized after learning nodejs and express that the code base for booked is messed up as fuck. I need to implement some structure into the initial_page file. Since learning express I have been developing a sense of structure into the code that is just not present in this project. I have to fix that later. I'll come up with some standards I'll utilize in the future. For instance, I only need to return data from the BookEvent class and then use it into the view. I have to implement something related to MVC since it's so plesent to work with it (worked with laravel, node and started dealing with flask). I'll have to go through every method at the BookEvent class and fix things.
